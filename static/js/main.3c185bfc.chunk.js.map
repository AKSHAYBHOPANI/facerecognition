{"version":3,"sources":["Components/Logo/logo.PNG","Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Components/SignIn/SignIn.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","logo","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","placeholder","Rank","name","entries","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","React","Component","Register","onNameChange","app","Clarifai","App","apiKey","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","err","SignIn","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c185bfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.549ade2f.PNG\";","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n        if (isSignedIn) {\r\n    return (\r\n        <nav style = {{display:'flex', justifyContent:'flex-end'}}>\r\n            <p onClick={() => onRouteChange('SignOut')} className='f4 link dim black pa3 pointer'> Sign Out </p>\r\n        </nav>\r\n    );\r\n        } else {\r\n\r\n    return (\r\n            <nav style = {{display:'flex', justifyContent:'flex-end'}}>\r\n            <p onClick={() => onRouteChange('SignIn')} className='f4 link dim black pa3 pointer'> Sign In </p>\r\n            <p onClick={() => onRouteChange('Register')} className='f4 link dim black pa3 pointer'> Register </p>\r\n        </nav>\r\n    )\r\n        }\r\n\r\n\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport \"./Logo.css\";\r\nimport logo from './logo.PNG'\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma2 mt0'>\r\n        <Tilt className=\"Tilt br4 shadow-2\" options={{ max : 55 }} style={{ height: 100, width: 100 }} >\r\n        <div className=\"Tilt-inner\"><img alt='logo' src={logo}></img> </div>\r\n        </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst ImageLinkForm = ( {onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f4'>\r\n            {'Face Recognition App is built on React and detects faces in your photos using Clarifai ML API. Give it a try... '}\r\n            </p>\r\n            <div className='pa4 br3 shadow-5 bg-orange'>\r\n\r\n                <input className='f4 pa2 w=70' type='text' onChange={onInputChange} placeholder=\"Paste image address here\"/>\r\n                <button\r\n                 className='w=30 grow f4 link ph3 pv2 dib white bg-light-purple center'\r\n                 onClick={onButtonSubmit}\r\n\r\n                >Detect</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n    return (\r\n<div>\r\n        <div className='white f3 b'>\r\n          {`Hello ${name}, your current rank is...`}\r\n        </div>\r\n        <div className='white f2 b i '>\r\n          {entries}\r\n         </div>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport './FaceRecognition.css';\r\nconst FaceRecognition = ({ imageUrl,box}) => {\r\n    return (\r\n    <div className='center ma'>\r\n     <div className='absolute nt2'>\r\n       <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n    <div className= 'bounding-box' style={{ top: box.topRow,right:box.rightCol,bottom:box.bottomRow,left:box.leftCol}}> </div>\r\n     </div>\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://facerecognition-server.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--black-10 bg-white mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\"> Welcome </legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign In\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p  onClick={() => onRouteChange('register')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\">Register</p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://facerecognition-server.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba bg-white b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\n\nconst app = new Clarifai.App({\n  apiKey: '3c02a31f629f4c1eb5dd0767bcd9503b'\n });\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false,\n      user: {\n      id: 1,\n      name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n      }\n    }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n   loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\n  onInputChange =(event) => {\n    this.setState({input:event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl:this.state.input});\n    app.models.predict(\n    Clarifai.FACE_DETECT_MODEL,\n    this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('https://facerecognition-server.herokuapp.com/image', {\n         method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n        id: this.state.user.id,\n       })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user, { entries: count}))\n\n        })\n    }\n    this.displayFaceBox(this.calculateFaceLocation(response))\n     })\n    .catch(err => console.log(err));\n  }\n\nonRouteChange = (route) => {\n  if (route === 'SignOut') {\n    this.setState(initialState);\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n  render() {\n     const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      { this.state.route === 'home'\n        ? <div>\n      <Logo/>\n      <Rank\n      name={this.state.user.name}\n      entries={this.state.user.entries}\n      />\n      <ImageLinkForm\n      onInputChange={this.onInputChange}\n      onButtonSubmit={this.onButtonSubmit}/>\n\n      <FaceRecognition box={box} imageUrl={imageUrl} />\n      </div>\n      : (\n         route === 'SignIn'\n        ? <SignIn  loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}